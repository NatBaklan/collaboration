{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOQriq5mb3hgU0xeCKvnouo"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"gkdQd6Cd0-w6","executionInfo":{"status":"ok","timestamp":1681809694750,"user_tz":-180,"elapsed":1151,"user":{"displayName":"Наталья Бакланова","userId":"07513681265496554998"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","\n","from tqdm import tqdm"]},{"cell_type":"code","source":["!wget 'https://drive.google.com/uc?id=1m0rwReR09achL0xTM6QPoN4tykz5bOMx' -O MovieLens.zip"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"B46pR3qo2Sy9","executionInfo":{"status":"ok","timestamp":1681809698054,"user_tz":-180,"elapsed":2056,"user":{"displayName":"Наталья Бакланова","userId":"07513681265496554998"}},"outputId":"1047adcf-9743-4b64-b721-51719230585e"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["--2023-04-18 09:21:28--  https://drive.google.com/uc?id=1m0rwReR09achL0xTM6QPoN4tykz5bOMx\n","Resolving drive.google.com (drive.google.com)... 173.194.215.138, 173.194.215.139, 173.194.215.100, ...\n","Connecting to drive.google.com (drive.google.com)|173.194.215.138|:443... connected.\n","HTTP request sent, awaiting response... 303 See Other\n","Location: https://doc-0g-84-docs.googleusercontent.com/docs/securesc/ha0ro937gcuc7l7deffksulhg5h7mbp1/3kfvp4lhic4mtfb26mmu9883l8k28cen/1681809675000/02611596255248067438/*/1m0rwReR09achL0xTM6QPoN4tykz5bOMx?uuid=8abf12bd-4b10-46cd-8514-cee1c17f6d8a [following]\n","Warning: wildcards not supported in HTTP.\n","--2023-04-18 09:21:30--  https://doc-0g-84-docs.googleusercontent.com/docs/securesc/ha0ro937gcuc7l7deffksulhg5h7mbp1/3kfvp4lhic4mtfb26mmu9883l8k28cen/1681809675000/02611596255248067438/*/1m0rwReR09achL0xTM6QPoN4tykz5bOMx?uuid=8abf12bd-4b10-46cd-8514-cee1c17f6d8a\n","Resolving doc-0g-84-docs.googleusercontent.com (doc-0g-84-docs.googleusercontent.com)... 172.217.193.132, 2607:f8b0:400c:c03::84\n","Connecting to doc-0g-84-docs.googleusercontent.com (doc-0g-84-docs.googleusercontent.com)|172.217.193.132|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 847695 (828K) [application/zip]\n","Saving to: ‘MovieLens.zip’\n","\n","MovieLens.zip       100%[===================>] 827.83K  --.-KB/s    in 0.01s   \n","\n","2023-04-18 09:21:30 (83.7 MB/s) - ‘MovieLens.zip’ saved [847695/847695]\n","\n"]}]},{"cell_type":"code","source":["!unzip MovieLens.zip\n"],"metadata":{"id":"heXxIqC43mCQ","executionInfo":{"status":"ok","timestamp":1681809701515,"user_tz":-180,"elapsed":844,"user":{"displayName":"Наталья Бакланова","userId":"07513681265496554998"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"79082a85-4204-4553-f5da-e8be6c7dd021"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Archive:  MovieLens.zip\n","  inflating: links.csv               \n","  inflating: movies.csv              \n","  inflating: ratings.csv             \n","  inflating: tags.csv                \n"]}]},{"cell_type":"code","source":["links = pd.read_csv('links.csv')\n","movies = pd.read_csv('movies.csv')\n","ratings = pd.read_csv('ratings.csv')\n","tags = pd.read_csv('tags.csv')"],"metadata":{"id":"av05fHYk3oDw","executionInfo":{"status":"ok","timestamp":1681809705533,"user_tz":-180,"elapsed":1018,"user":{"displayName":"Наталья Бакланова","userId":"07513681265496554998"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["!pip install surprise"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ENJ2jorpq576","executionInfo":{"status":"ok","timestamp":1681809808510,"user_tz":-180,"elapsed":70527,"user":{"displayName":"Наталья Бакланова","userId":"07513681265496554998"}},"outputId":"a8e3b431-543a-491f-be6c-980a85d9914e"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting surprise\n","  Downloading surprise-0.1-py2.py3-none-any.whl (1.8 kB)\n","Collecting scikit-surprise\n","  Downloading scikit-surprise-1.1.3.tar.gz (771 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m772.0/772.0 kB\u001b[0m \u001b[31m11.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: joblib>=1.0.0 in /usr/local/lib/python3.9/dist-packages (from scikit-surprise->surprise) (1.2.0)\n","Requirement already satisfied: numpy>=1.17.3 in /usr/local/lib/python3.9/dist-packages (from scikit-surprise->surprise) (1.22.4)\n","Requirement already satisfied: scipy>=1.3.2 in /usr/local/lib/python3.9/dist-packages (from scikit-surprise->surprise) (1.10.1)\n","Building wheels for collected packages: scikit-surprise\n","  Building wheel for scikit-surprise (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for scikit-surprise: filename=scikit_surprise-1.1.3-cp39-cp39-linux_x86_64.whl size=3195835 sha256=3398c7963807a32caca97f55812052dcea17ef250faac65e137621fa95b55599\n","  Stored in directory: /root/.cache/pip/wheels/c6/3a/46/9b17b3512bdf283c6cb84f59929cdd5199d4e754d596d22784\n","Successfully built scikit-surprise\n","Installing collected packages: scikit-surprise, surprise\n","Successfully installed scikit-surprise-1.1.3 surprise-0.1\n"]}]},{"cell_type":"code","source":["from surprise import KNNWithMeans, KNNBasic,KNNBaseline\n","from surprise import Dataset\n","from surprise import accuracy\n","from surprise import Reader\n","from surprise.model_selection import train_test_split\n","\n","import pandas as pd"],"metadata":{"id":"y4-O4GNTrA79","executionInfo":{"status":"ok","timestamp":1681810345067,"user_tz":-180,"elapsed":6,"user":{"displayName":"Наталья Бакланова","userId":"07513681265496554998"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["movies = pd.read_csv('movies.csv')\n","ratings = pd.read_csv('ratings.csv')"],"metadata":{"id":"vN3HoGr-rU6m","executionInfo":{"status":"ok","timestamp":1681809827354,"user_tz":-180,"elapsed":501,"user":{"displayName":"Наталья Бакланова","userId":"07513681265496554998"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["movies_with_ratings = movies.merge(ratings, on='movieId').reset_index(drop=True)\n","movies_with_ratings.dropna(inplace=True)\n","movies_with_ratings.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":444},"id":"ykuOgM4urZ8J","executionInfo":{"status":"ok","timestamp":1681809878542,"user_tz":-180,"elapsed":234,"user":{"displayName":"Наталья Бакланова","userId":"07513681265496554998"}},"outputId":"f9399e19-4f1e-4a4c-c95e-35dc747c30f6"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   movieId             title                                       genres  \\\n","0        1  Toy Story (1995)  Adventure|Animation|Children|Comedy|Fantasy   \n","1        1  Toy Story (1995)  Adventure|Animation|Children|Comedy|Fantasy   \n","2        1  Toy Story (1995)  Adventure|Animation|Children|Comedy|Fantasy   \n","3        1  Toy Story (1995)  Adventure|Animation|Children|Comedy|Fantasy   \n","4        1  Toy Story (1995)  Adventure|Animation|Children|Comedy|Fantasy   \n","\n","   userId  rating   timestamp  \n","0       1     4.0   964982703  \n","1       5     4.0   847434962  \n","2       7     4.5  1106635946  \n","3      15     2.5  1510577970  \n","4      17     4.5  1305696483  "],"text/html":["\n","  <div id=\"df-b1d89df3-71c7-4783-bff5-1f47e37c7982\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>movieId</th>\n","      <th>title</th>\n","      <th>genres</th>\n","      <th>userId</th>\n","      <th>rating</th>\n","      <th>timestamp</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>Toy Story (1995)</td>\n","      <td>Adventure|Animation|Children|Comedy|Fantasy</td>\n","      <td>1</td>\n","      <td>4.0</td>\n","      <td>964982703</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>Toy Story (1995)</td>\n","      <td>Adventure|Animation|Children|Comedy|Fantasy</td>\n","      <td>5</td>\n","      <td>4.0</td>\n","      <td>847434962</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>Toy Story (1995)</td>\n","      <td>Adventure|Animation|Children|Comedy|Fantasy</td>\n","      <td>7</td>\n","      <td>4.5</td>\n","      <td>1106635946</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>Toy Story (1995)</td>\n","      <td>Adventure|Animation|Children|Comedy|Fantasy</td>\n","      <td>15</td>\n","      <td>2.5</td>\n","      <td>1510577970</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>Toy Story (1995)</td>\n","      <td>Adventure|Animation|Children|Comedy|Fantasy</td>\n","      <td>17</td>\n","      <td>4.5</td>\n","      <td>1305696483</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b1d89df3-71c7-4783-bff5-1f47e37c7982')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b1d89df3-71c7-4783-bff5-1f47e37c7982 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b1d89df3-71c7-4783-bff5-1f47e37c7982');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["dataset = pd.DataFrame({\n","    'uid': movies_with_ratings.userId,\n","    'iid': movies_with_ratings.title,\n","    'rating': movies_with_ratings.rating\n","})"],"metadata":{"id":"cH8kcjnzrjVH","executionInfo":{"status":"ok","timestamp":1681809901516,"user_tz":-180,"elapsed":324,"user":{"displayName":"Наталья Бакланова","userId":"07513681265496554998"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["dataset.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"l2WDnqe6rsBK","executionInfo":{"status":"ok","timestamp":1681809920492,"user_tz":-180,"elapsed":403,"user":{"displayName":"Наталья Бакланова","userId":"07513681265496554998"}},"outputId":"11fe5232-f696-47f3-f38b-d4033f9349c3"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   uid               iid  rating\n","0    1  Toy Story (1995)     4.0\n","1    5  Toy Story (1995)     4.0\n","2    7  Toy Story (1995)     4.5\n","3   15  Toy Story (1995)     2.5\n","4   17  Toy Story (1995)     4.5"],"text/html":["\n","  <div id=\"df-3d7f5032-da56-40f6-9be0-a2963def6faf\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>uid</th>\n","      <th>iid</th>\n","      <th>rating</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>Toy Story (1995)</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5</td>\n","      <td>Toy Story (1995)</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>7</td>\n","      <td>Toy Story (1995)</td>\n","      <td>4.5</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>15</td>\n","      <td>Toy Story (1995)</td>\n","      <td>2.5</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>17</td>\n","      <td>Toy Story (1995)</td>\n","      <td>4.5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3d7f5032-da56-40f6-9be0-a2963def6faf')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3d7f5032-da56-40f6-9be0-a2963def6faf button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3d7f5032-da56-40f6-9be0-a2963def6faf');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["ratings.rating.min()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cwV6Ojy-rw1P","executionInfo":{"status":"ok","timestamp":1681809942304,"user_tz":-180,"elapsed":264,"user":{"displayName":"Наталья Бакланова","userId":"07513681265496554998"}},"outputId":"792251a2-f93e-4407-b511-120df38b0cac"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.5"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["ratings.rating.max()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dTvUKPZ2rzOk","executionInfo":{"status":"ok","timestamp":1681809958355,"user_tz":-180,"elapsed":226,"user":{"displayName":"Наталья Бакланова","userId":"07513681265496554998"}},"outputId":"128a9ec3-1dac-4598-91cb-e9e66519c2ae"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["5.0"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["reader = Reader(rating_scale=(0.5, 5.0))\n","data = Dataset.load_from_df(dataset, reader)"],"metadata":{"id":"051lcIKvr5Zq","executionInfo":{"status":"ok","timestamp":1681809975614,"user_tz":-180,"elapsed":235,"user":{"displayName":"Наталья Бакланова","userId":"07513681265496554998"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["trainset, testset = train_test_split(data, test_size=0.15, random_state =1 )"],"metadata":{"id":"tC10jIfJsL61","executionInfo":{"status":"ok","timestamp":1681810109395,"user_tz":-180,"elapsed":287,"user":{"displayName":"Наталья Бакланова","userId":"07513681265496554998"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["dataset['uid'].nunique(), dataset['iid'].nunique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FJY_scmxsb8h","executionInfo":{"status":"ok","timestamp":1681810131824,"user_tz":-180,"elapsed":300,"user":{"displayName":"Наталья Бакланова","userId":"07513681265496554998"}},"outputId":"ca6e89fd-abeb-4306-ca43-718c5b81887d"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(610, 9719)"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["algo = KNNWithMeans(k=50,  sim_options={'name': 'pearson_baseline', 'user_based': True})\n","algo.fit(trainset)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"w9h9zlS4spve","executionInfo":{"status":"ok","timestamp":1681810254616,"user_tz":-180,"elapsed":1417,"user":{"displayName":"Наталья Бакланова","userId":"07513681265496554998"}},"outputId":"8204c53c-9a6d-426a-b73c-bbf6e8604bc5"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["Estimating biases using als...\n","Computing the pearson_baseline similarity matrix...\n","Done computing similarity matrix.\n"]},{"output_type":"execute_result","data":{"text/plain":["<surprise.prediction_algorithms.knns.KNNWithMeans at 0x7f8f8e6345e0>"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["test_pred = algo.test(testset)\n","accuracy.rmse(test_pred, verbose=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1zWxeN4-tC_p","executionInfo":{"status":"ok","timestamp":1681810280740,"user_tz":-180,"elapsed":2700,"user":{"displayName":"Наталья Бакланова","userId":"07513681265496554998"}},"outputId":"ab63d358-6411-4393-b6d1-26a8c96e6b6c"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["RMSE: 0.8860\n"]},{"output_type":"execute_result","data":{"text/plain":["0.8859569975064402"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["algo1 = KNNBaseline(k=50,  sim_options={'name': 'pearson_baseline', 'user_based': True})\n","algo1.fit(trainset)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7nkWW5jcteJ7","executionInfo":{"status":"ok","timestamp":1681810437109,"user_tz":-180,"elapsed":1682,"user":{"displayName":"Наталья Бакланова","userId":"07513681265496554998"}},"outputId":"ccfeafca-85f3-43a4-ed8f-dfb75e313d85"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["Estimating biases using als...\n","Computing the pearson_baseline similarity matrix...\n","Done computing similarity matrix.\n"]},{"output_type":"execute_result","data":{"text/plain":["<surprise.prediction_algorithms.knns.KNNBaseline at 0x7f8f8e670130>"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["test_pred1 = algo1.test(testset)\n","accuracy.rmse(test_pred1, verbose=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-vOMbL_UtsKA","executionInfo":{"status":"ok","timestamp":1681810458044,"user_tz":-180,"elapsed":1730,"user":{"displayName":"Наталья Бакланова","userId":"07513681265496554998"}},"outputId":"4b5d116d-379b-4c77-ef58-641eed4000d9"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["RMSE: 0.8692\n"]},{"output_type":"execute_result","data":{"text/plain":["0.8691607613954145"]},"metadata":{},"execution_count":22}]},{"cell_type":"markdown","source":["Таким образом подойдет метод user_based,модель KNNBaseline.\n","\n","---\n","\n"],"metadata":{"id":"X2ZrgezNvOwy"}},{"cell_type":"code","source":["algo3 = KNNBasic(k=50, sim_options={\n","    'name': 'cosine',\n","    'user_based': True  # compute similarities between items\n","})\n","algo3.fit(trainset)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XDppmXwOuoHu","executionInfo":{"status":"ok","timestamp":1681810810071,"user_tz":-180,"elapsed":628,"user":{"displayName":"Наталья Бакланова","userId":"07513681265496554998"}},"outputId":"7aceca29-9783-49bf-e48e-5fb44d20c230"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stdout","text":["Computing the cosine similarity matrix...\n","Done computing similarity matrix.\n"]},{"output_type":"execute_result","data":{"text/plain":["<surprise.prediction_algorithms.knns.KNNBasic at 0x7f8f8e69f4f0>"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["test_pred3 = algo3.test(testset)\n","accuracy.rmse(test_pred3, verbose=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1681810819733,"user_tz":-180,"elapsed":1264,"user":{"displayName":"Наталья Бакланова","userId":"07513681265496554998"}},"outputId":"3a23707c-b615-4265-8915-fd3c6f164a64","id":"pk_CBxSUuy84"},"execution_count":28,"outputs":[{"output_type":"stream","name":"stdout","text":["RMSE: 0.9660\n"]},{"output_type":"execute_result","data":{"text/plain":["0.965998501469225"]},"metadata":{},"execution_count":28}]}]}